name: "CI/CD"

on:
  push:
    branches:
      - "*"
      - "!refs/tags/*"
    tags:
      - "v*"
  pull_request:
    branches:
      - "*"

jobs:
  linting:
    name: Linting Python Code
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        linter: [ruff, pylint]
    steps:
      - name: Checking out Repository
        uses: actions/checkout@v4
      - name: Setting up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Installing Library
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      - name: Python Lint Code Scanning Action
        uses: advanced-security/python-lint-code-scanning-action@v1
        with:
          linter: ${{ matrix.linter }}
          python-version: ${{ matrix.python-version }}

  testing:
    name: Testing Code with PyTest
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checking out Repository
        uses: actions/checkout@v4
      - name: Setting up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Installing Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[tests]"
      - name: Running Tests
        run: pytest

  buildingWheels:
    name: Building Wheels on ${{ matrix.os }}
    needs: [linting, testing]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checking out Repository
        uses: actions/checkout@v4
      - name: Setting up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Installing Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
      - if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags') }}
        shell: bash
        run: |
          v=$(date '+%Y.%m.%d')
          hatch version "${v}a${{ github.run_id }}"
      - if: ${{ github.event_name == 'pull_request' && !startsWith(github.ref, 'refs/tags') }}
        shell: bash
        run: |
          v=$(date '+%Y.%m.%d')
          hatch version "${v}dev${{ github.run_id }}"
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_ARCHS: auto64
          CIBW_BUILD: cp3*-*
      - name: Uploading Artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publishPackage:
    name: Publish Python Package
    needs: buildingWheels
    runs-on: ubuntu-latest
    steps:
      - name: Checking out Repository
        uses: actions/checkout@v4
      - name: Downloading Artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
      - name: Publish package to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
